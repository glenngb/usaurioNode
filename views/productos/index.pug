doctype html
html
  head
    title Productos
    link(rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css")
    // FontAwesome CDN
    link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css")
    script(src="https://code.jquery.com/jquery-3.5.1.min.js")  // Usar la versión completa de jQuery
    script(src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js")
    script(src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js")
    script(src="https://cdn.jsdelivr.net/npm/sweetalert2@11")
    
  body
    .container
      h1.mt-5 Lista de Productos
      
      // Tabla de productos con Bootstrap
      table.table.table-striped.mt-4
        thead
          tr
            th Nombre
            th Descripción
            th Precio
            th Inventario
            th Categoría
            th Acción
        tbody
          each producto in productos
            tr
              td #{producto.nombre}
              td #{producto.descripcion}
              td #{producto.precio} $
              td #{producto.inventario}
              td #{producto.categoria}
              td
                button.btn.btn-warning.btn-sm(type="button" data-toggle="modal" data-target="#editarProductoModal" data-id=producto.id data-nombre=producto.nombre data-descripcion=producto.descripcion data-precio=producto.precio data-inventario=producto.inventario data-categoria=producto.categoria)
                  i.fas.fa-edit
                button.btn.btn-danger.btn-sm.btn-eliminar(type="button" data-id=producto.id)
                  i.fas.fa-trash-alt

    // Modal para editar producto
    div.modal.fade(id="editarProductoModal" tabindex="-1" role="dialog" aria-labelledby="editarProductoModalLabel" aria-hidden="true")
      .modal-dialog(role="document")
        .modal-content
          .modal-header
            h5.modal-title#editarProductoModalLabel Editar Producto
            button(type="button" class="close" data-dismiss="modal" aria-label="Close")
              span(aria-hidden="true") &times;
          .modal-body
            form(action="/productos" method="POST" id="formEditarProducto")
              input#editar-id(type="hidden" name="id")
              .form-group
                label(for="editar-nombre") Nombre:
                input.form-control#editar-nombre(type="text" name="nombre" required)
              .form-group
                label(for="editar-descripcion") Descripción:
                input.form-control#editar-descripcion(type="text" name="descripcion" required)
              .form-group
                label(for="editar-precio") Precio:
                input.form-control#editar-precio(type="number" step="0.01" name="precio" required)
              .form-group
                label(for="editar-inventario") Inventario:
                input.form-control#editar-inventario(type="number" name="inventario" required)
              .form-group
                label(for="editar-categoria") Categoría:
                input.form-control#editar-categoria(type="text" name="categoria" required)
              button.btn.btn-primary(type="submit") Actualizar Producto

    script.
      $('#editarProductoModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget); // Botón que activó el modal
        var id = button.data('id');
        var nombre = button.data('nombre');
        var descripcion = button.data('descripcion');
        var precio = button.data('precio');
        var inventario = button.data('inventario');
        var categoria = button.data('categoria');

        var modal = $(this);
        modal.find('.modal-body #editar-id').val(id);
        modal.find('.modal-body #editar-nombre').val(nombre);
        modal.find('.modal-body #editar-descripcion').val(descripcion);
        modal.find('.modal-body #editar-precio').val(precio);
        modal.find('.modal-body #editar-inventario').val(inventario);
        modal.find('.modal-body #editar-categoria').val(categoria);
        
        modal.find('form').attr('action', `/productos/${id}/actualizar`);
      });

    h2.mt-5 Crear un nuevo producto
    form(action="/productos" method="POST" class="mt-3")
      .form-group
        label(for="nombre") Nombre:
        input.form-control(type="text" name="nombre" required)

      .form-group
        label(for="descripcion") Descripción:
        input.form-control(type="text" name="descripcion" required)

      .form-group
        label(for="precio") Precio:
        input.form-control(type="number" step="0.01" name="precio" required)

      .form-group
        label(for="inventario") Inventario:
        input.form-control(type="number" name="inventario" required)

      .form-group
        label(for="categoria") Categoría:
        input.form-control(type="text" name="categoria" required)

      button.btn.btn-primary(type="submit") Crear Producto

script.
  document.addEventListener('DOMContentLoaded', function () {
    const eliminarBtns = document.querySelectorAll('.btn-eliminar');

    eliminarBtns.forEach(btn => {
      btn.addEventListener('click', function () {
        const productId = this.getAttribute('data-id'); // Obtener el ID del usuario

        // Mostrar la alerta de confirmación
        Swal.fire({
          title: '¿Estás seguro?',
          text: "No podrás revertir esta acción",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Sí, eliminar',
          cancelButtonText: 'Cancelar'
        }).then((result) => {
          if (result.isConfirmed) {
            // Si el usuario confirma, hacer la petición de eliminación
            fetch(`/productos/${productId}/eliminar`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
            })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                Swal.fire(
                  'Eliminado!',
                  'El producto ha sido eliminado.',
                  'success'
                );
                location.reload();
                 
              } else {
                Swal.fire('Error', 'No se pudo eliminar el producto.', 'error');
              }
            })
            .catch(error => {
              Swal.fire('Error', 'Hubo un problema al eliminar el producto.', 'error');
            });
          }
        });
      });
    });
  });
